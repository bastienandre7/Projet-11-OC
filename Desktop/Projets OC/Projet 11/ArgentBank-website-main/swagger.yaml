swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/account:
    get:
      tags:
        - User Module
      summary: User Bank Account Information API
      responses:
        '200':
          description: User Bank Account Information well returned
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    balance:
                      type: string
                      example: "$48,098.43"
                    transactionType:
                      type: string
                      example: "Electronic"
                    transactionAmount:
                      type: string
                      example: "$8.00"
                    date:
                      type: string
                      example: "27/02/20"
                    description:
                      type: string
                      example: "Golden Sun Bakery"
                    category:
                      type: string
                      example: "Food"
        '400':
          description: Bad request
        '500':
            description: Internal Server Error
    post:
      tags:
        - User Module
      summary: Add a transaction note
      content:
        application/json:
          schema:
            type: object
            properties:
              note:
                type: string
                example: "lorem ipsum"
      responses:
        '201':
          description: Note added 
        '400':
          description: Bad request
        '500':
          description: Internal Server Error
    put:
      tags:
        - User Module
      summary: Update transaction category
      content:
        application/json:
          schema:
            type: object
            properties:
              category:
                type: string
                example: "Food"
      responses:
        '201':
          description: Category updated
        '400':
          description: Bad request
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      balance:
        type: string
      transactionType:
        type: string
      transactionAmount:
        type: string
      date:
        type: string
      description:
        type: string
      category:
        type: string
      note:
        type: string
  Note:
    type: object
    properties:
      note:
        type: string
  Category:
    type: object
      properties:
        category:
          type: string
